<!-- navigationBarColor（导航栏底色）：
    仅能在 API v21 也就是 Android 5 以后的版本中使用， 因此要将之设定在 res/values-v21/styles.xml 里面。
    -->
<com.hilo.util.MaterialDrawerLayout
    android:id="@+id/drawer_layout"
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="false">

    <!-- Framelayout per la visualizzazione -->
    <RelativeLayout
        android:id="@+id/content"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <!-- CoordinatorLayout 扩展或者缩小Toolbar或者头部，让主内容区域有更多的空间-->
        <android.support.design.widget.CoordinatorLayout
            android:id="@+id/coordinator_container"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical">

            <com.hilo.views.widgets.MultiSwipeRefreshLayout android:id="@+id/swipe_refresh_layout"
                                                            android:layout_width="match_parent"
                                                            android:layout_height="match_parent"
                                                            android:layout_marginTop="64dp">
            <FrameLayout
                android:id="@+id/frame_container"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:layout_below="@+id/toolbar"
                android:clipToPadding="false"
                app:layout_behavior="@string/appbar_scrolling_view_behavior"/>
            </com.hilo.views.widgets.MultiSwipeRefreshLayout>

            <!--
            enterAlways: 一旦向上滚动这个view就可见。

            enterAlwaysCollapsed: 顾名思义，这个flag定义的是何时进入（已经消失之后何时再次显示）。假设你定义了一个最小高度（minHeight）同时enterAlways也定义了，那么view将在到达这个最小高度的时候开始显示，并且从这个时候开始慢慢展开，当滚动到顶部的时候展开完。配合 android:minHeight="100dp" 一起使用

            exitUntilCollapsed: 同样顾名思义，这个flag时定义何时退出，当你定义了一个minHeight，这个view将在滚动到达这个最小高度的时候消失。

            contentScrim - 设置当完全CollapsingToolbarLayout折叠(收缩)后的背景颜色。

            expandedTitleMarginStart - 设置扩张时候(还没有收缩时)title向左填充的距离。
            -->
            <android.support.design.widget.AppBarLayout
                android:id="@+id/appBarLayout"
                android:layout_width="match_parent"
                android:layout_height="256dp"
                android:fitsSystemWindows="true">

                <!--android:minHeight="100dp" 配合enterAlwaysCollapsed使用-->
                <android.support.design.widget.CollapsingToolbarLayout
                    android:id="@+id/collapsing_toolbar_layout"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    app:contentScrim="#F50057"
                    app:expandedTitleMarginStart="48dp"
                    app:layout_collapseMode="parallax"
                    app:layout_scrollFlags="scroll|exitUntilCollapsed">

                    <ImageView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:layout_gravity="center"
                        android:scaleType="centerCrop"
                        android:src="@drawable/ic_launcher"
                        app:layout_collapseMode="parallax"
                        app:layout_collapseParallaxMultiplier="0.7"/>

                    <!--layout_collapseMode (折叠模式) - 有两个值:

                        pin -  设置为这个模式时，当CollapsingToolbarLayout完全收缩后，Toolbar还可以保留在屏幕上。

                        parallax - 设置为这个模式时，在内容滚动时，CollapsingToolbarLayout中的View（比如ImageView)也可以同时滚动，实现视差滚动效果，通常和layout_collapseParallaxMultiplier(设置视差因子)搭配使用。

                        layout_collapseParallaxMultiplier(视差因子) - 设置视差滚动因子，值为：0~1。

                        3、在Toolbar控件中：

                        我们设置了layout_collapseMode(折叠模式)：为pin。

                        综上分析：当设置了layout_behavior的控件响应起了CollapsingToolbarLayout中的layout_scrollFlags事件时，ImageView会有视差效果的向上滚动移除屏幕，当开始折叠时CollapsingToolbarLayout的背景色(也就是Toolbar的背景色)就会变为我们设置好的背景色，Toolbar也一直会固定在最顶端。
                    -->

                    <ImageView
                        android:id="@+id/statusBar"
                        android:layout_width="match_parent"
                        android:layout_height="@dimen/statusMargin"
                        android:background="?attr/colorPrimaryDark"/>

                    <android.support.v7.widget.Toolbar
                        android:id="@+id/toolbar"
                        android:layout_width="match_parent"
                        android:layout_height="?attr/actionBarSize"
                        android:layout_below="@+id/statusBar"
                        android:background="?attr/colorPrimary"
                        app:layout_collapseMode="pin"/>

                </android.support.design.widget.CollapsingToolbarLayout>
            </android.support.design.widget.AppBarLayout>
        </android.support.design.widget.CoordinatorLayout>
    </RelativeLayout>

    <!-- RelativeLayout per il drawer da visualizzare -->
    <include layout="@layout/layout_drawer_customheader"/>

</com.hilo.util.MaterialDrawerLayout>